services:
  postgres:
    image: postgres:15-alpine
    container_name: opencsat_postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'
    networks:
      - opencsat

  teable:
    image: ghcr.io/teableio/teable:latest
    container_name: opencsat_teable
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "${TEABLE_PORT}:3000"
    env_file:
      - .env
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.5'
    networks:
      - opencsat

  app:
    build:
      context: ./app
    container_name: opencsat_app
    restart: unless-stopped
    depends_on:
      teable:
        condition: service_healthy
    ports:
      - "${APP_PORT}:3000"
    env_file:
      - .env
    environment:
      - TEABLE_URL=http://teable:3000
      - NODE_ENV=production
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'
    networks:
      - opencsat

networks:
  opencsat:
    driver: bridge